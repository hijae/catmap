<!DOCTYPE html>
<html>

<head>
	<title>DCU CAT</title>
	<meta charset="utf-8" />
	<meta name="viewport"
		content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"">
	
	<link rel=" shortcut icon" type="image/x-icon" href="docs/images/favicon.ico" />
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
	integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
	crossorigin=""/>
	 <!-- Make sure you put this AFTER Leaflet's CSS -->
	 <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
	<style>
		.navbar {
			height: 50px;
			width: 100%;
			background: #cc9090;
			font-weight: bolder;
			font-size: 25px;
			display: flex;
			justify-content: center;
			align-items: center;
		}
	</style>
</head>

<body>
	<div class="navbar">DCU CAT MAP</div>
	<div id="mapid" style="width: 100%; height: 100vh;"></div>
	<!-- The core Firebase JS SDK is always required and must be listed first -->
	<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
	<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>

	<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
	<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-analytics.js"></script>
	
	
	<script>
		// Your web app's Firebase configuration
		// For Firebase JS SDK v7.20.0 and later, measurementId is optional
		var firebaseConfig = {
			apiKey: "AIzaSyCxsKPouaoVNmLqHwx8Bw5RLng3IDqB9lM",
			authDomain: "dcu-cat.firebaseapp.com",
			projectId: "dcu-cat",
			storageBucket: "dcu-cat.appspot.com",
			messagingSenderId: "613584095229",
			appId: "1:613584095229:web:8814a8b935d17415fefb94",
			measurementId: "G-3DTWJ4LM4D"
		};
		// Initialize Firebase
		firebase.initializeApp(firebaseConfig);
		firebase.analytics();
		var database = firebase.database();


		var catIcon = L.icon({
			iconUrl: '/images/cat.png',
			iconSize: [30, 30], // size of the icon
			iconAnchor: [15, 15], // point of the icon which will correspond to marker's location
			popupAnchor: [0, 0] // point from which the popup should open relative to the iconAnchor
		});
		var mymap = L.map('mapid').setView([35.912, 128.806], 17);
		L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {maxZoom: 19,attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}).addTo(mymap);
		var arr = [];
		var end = 0;

		//여기에서 서버에서 가져오는 부분 만들기
		for (var i = 0; i < 4; i++) {
			arr[i] = new Array(2);
		}
		var dbTestRef = database.ref('loca/')
		dbTestRef.on('child_added', function (data) {
			console.log(data.val())
			console.log(data.val().brdx)
			L.marker([data.val().brdx, data.val().brdy], { icon: catIcon }).addTo(mymap);
		})
		function onMapClick(e) {

			x = e.latlng.lat;
			y = e.latlng.lng;
			L.marker([x, y], { icon: catIcon }).addTo(mymap);

			//여기에 서버에 업로드 하는 부분 만들기
			var newPostKey = firebase.database().ref().child('posts').push().key;

			var postData = {
				brdno: newPostKey,
				brdx: x,
				brdy: y,
				brddate: Date.now()
			};

			var updates = {};
			updates['/loca/' + newPostKey] = postData;
			firebase.database().ref().update(updates);
		}
		mymap.on('click', onMapClick);

	</script>
</body>

</html>
